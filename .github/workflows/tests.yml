name: Tests

on:
  push:
    branches:
      - master
  pull_request:

permissions:
  contents: write
  checks: write
  pull-requests: read

jobs:
  build-ui:
    name: Build UI
    uses: ./.github/workflows/build-ui.yml
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  typos:
    name: Spell Check with Typos
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: typos-action
        uses: crate-ci/typos@v1.21.0

  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@v4

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest

  tests:
    name: Tests
    needs: build-ui
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-13, macos-14 ]
        test: [ unit, integration ]
        profile: [ main, other ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true
          check-latest: true

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          check-latest: true
          cache: 'pip'
          cache-dependency-path: 'scripts/requirements.txt'

      - name: Add python dependencies
        run: |
          pip install -r scripts/requirements.txt

      - name: Download UI file
        uses: actions/download-artifact@v4
        with:
          name: ui

      - name: Move UI file
        run: mv index.html internal/webui/index.html

      - name: Cache test binaries
        uses: actions/cache@v4
        with:
          path: scripts/bins
          key: test-bins-${{ hashFiles('scripts/binaries.csv') }}
          enableCrossOsArchive: true

      - name: Run tests
        run: python scripts/tests.py --${{ matrix.test }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PROFILE: ${{ matrix.profile }}

      - name: Upload coverage
        uses: codecov/codecov-action@v4.4.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ${{ matrix.test }}.profile
          flags: ${{ matrix.test }}

      - name: Upload results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.os }}-${{ matrix.test }}-${{ matrix.profile }}-results
          path: results/
          compression-level: 9

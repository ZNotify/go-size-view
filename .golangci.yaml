---
# Options for analysis running.
run:
  timeout: 5m
  tests: true

linters:
  enable:
    # check when errors are compared without errors.Is
    - errorlint

    # check imports order and makes it always deterministic.
    - gci

    # linter to detect errors invalid key values count
    - loggercheck

    # simple security check
    - gosec

    # Fast, configurable, extensible, flexible, and beautiful linter for Go.
    # Drop-in replacement of golint.
    - revive

    # make sure to use t.Helper() when needed
    - thelper

    # make sure that error are checked after a rows.Next()
    - rowserrcheck

    #  Checks that sql.Rows, sql.Stmt, sqlx.NamedStmt, pgx.Query are closed.
    - sqlclosecheck

    # ensure that lint exceptions have explanations. Consider the case below:
    - nolintlint

    # detect duplicated words in code
    - dupword

    # detect the possibility to use variables/constants from the Go standard library.
    - usestdlibvars

    # mirror suggests rewrites to avoid unnecessary []byte/string conversion
    - mirror

    # testify checks good usage of github.com/stretchr/testify.
    - testifylint

    # Check whether the function uses a non-inherited context.
    - contextcheck

linters-settings:
  loggercheck:
    require-string-key: true
    # Require printf-like format specifier (%s, %d for example) not present.
    # Default: false
    no-printf-like: true

  nolintlint:
    # Disable to ensure that all nolint directives actually have an effect.
    # Default: false
    allow-unused: true
    # Enable to require an explanation of nonzero length
    # after each nolint directive.
    # Default: false
    require-explanation: true
    # Enable to require nolint directives to mention the specific
    # linter being suppressed.
    # Default: false
    require-specific: true

  gci:
    sections:
      - standard
      - default
      - prefix(syscall/js) # fixme: workaround, wait for https://github.com/daixiang0/gci/pull/208 merged
      - localmodule
    custom-order: true

  staticcheck:
    # SAxxxx checks in https://staticcheck.io/docs/configuration/options/#checks
    checks: [ "all" ]

  revive:
    enable-all-rules: true
    rules:
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#exported
      - name: exported
        arguments:
          # enables checking public methods of private types
          - "checkPrivateReceivers"
          # make error messages clearer
          - "sayRepetitiveInsteadOfStutters"

      - name: unhandled-error
        arguments: # here are the exceptions we don't want to be reported
          - "fmt.Print.*"
          - "fmt.Fprint.*"
          - "bytes.Buffer.Write"
          - "bytes.Buffer.WriteByte"
          - "bytes.Buffer.WriteString"
          - "strings.Builder.WriteString"
          - "strings.Builder.WriteRune"

      - name: cognitive-complexity
        severity: warning
        arguments: [ 300 ]

      - name: cyclomatic
        arguments: [ 100 ]

      - name: unchecked-type-assertion
        disabled: true
      - name: struct-tag
        disabled: true
      - name: add-constant
        disabled: true
      - name: flag-parameter
        disabled: true
      - name: imports-blocklist
        disabled: true
      - name: nested-structs
        disabled: true
      - name: modifies-value-receiver
        disabled: true
      - name: line-length-limit
        disabled: true
      - name: argument-limit
        disabled: true
      - name: banned-characters
        disabled: true
      - name: max-public-structs
        disabled: true
      - name: function-result-limit
        disabled: true
      - name: function-length
        disabled: true
      - name: file-header
        disabled: true
      - name: empty-lines
        disabled: true

  misspell:
    locale: "US" # Fix the colour => color, and co


output:
  # Make issues output unique by line.
  # Default: true
  # Note: unique in this case means that you can have at most 1 issue per line of code.
  # one issue with a given line and we want to see them all at once.
  uniq-by-line: false
